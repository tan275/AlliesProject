{"ast":null,"code":"import { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nconst provider = new GoogleAuthProvider();\nexport default {\n  data() {\n    return {};\n  },\n  methods: {\n    signUp() {\n      const auth = getAuth();\n      signInWithPopup(auth, provider).then(result => {\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        const credential = GoogleAuthProvider.credentialFromResult(result);\n        const token = credential.accessToken;\n        // The signed-in user info.\n        const user = result.user;\n        // IdP data available using getAdditionalUserInfo(result)\n        // ...\n      }).catch(error => {\n        // Handle Errors here.\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        // The email of the user's account used.\n        const email = error.customData.email;\n        // The AuthCredential type that was used.\n        const credential = GoogleAuthProvider.credentialFromError(error);\n        // ...\n      });\n    }\n  }\n};","map":{"version":3,"names":["getAuth","signInWithPopup","GoogleAuthProvider","provider","data","methods","signUp","auth","then","result","credential","credentialFromResult","token","accessToken","user","catch","error","errorCode","code","errorMessage","message","email","customData","credentialFromError"],"sources":["src/views/SignUpForm.vue"],"sourcesContent":["<template>\r\n    <form >\r\n        <h2>Sign Up</h2>\r\n        <button @click=\"signUp\">Sign Up</button>\r\n    </form>\r\n</template>\r\n  \r\n<script>\r\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\r\n\r\nconst provider = new GoogleAuthProvider();\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n\r\n        }\r\n    },\r\n    methods: {\r\n        signUp() {\r\n            const auth = getAuth();\r\n            signInWithPopup(auth, provider)\r\n                .then((result) => {\r\n                    // This gives you a Google Access Token. You can use it to access the Google API.\r\n                    const credential = GoogleAuthProvider.credentialFromResult(result);\r\n                    const token = credential.accessToken;\r\n                    // The signed-in user info.\r\n                    const user = result.user;\r\n                    // IdP data available using getAdditionalUserInfo(result)\r\n                    // ...\r\n                }).catch((error) => {\r\n                    // Handle Errors here.\r\n                    const errorCode = error.code;\r\n                    const errorMessage = error.message;\r\n                    // The email of the user's account used.\r\n                    const email = error.customData.email;\r\n                    // The AuthCredential type that was used.\r\n                    const credential = GoogleAuthProvider.credentialFromError(error);\r\n                    // ...\r\n                });\r\n        }\r\n    }\r\n}\r\n</script>"],"mappings":"AAQA,SAAAA,OAAA,EAAAC,eAAA,EAAAC,kBAAA;AAEA,MAAAC,QAAA,OAAAD,kBAAA;AAEA;EACAE,KAAA;IACA,QAEA;EACA;EACAC,OAAA;IACAC,OAAA;MACA,MAAAC,IAAA,GAAAP,OAAA;MACAC,eAAA,CAAAM,IAAA,EAAAJ,QAAA,EACAK,IAAA,CAAAC,MAAA;QACA;QACA,MAAAC,UAAA,GAAAR,kBAAA,CAAAS,oBAAA,CAAAF,MAAA;QACA,MAAAG,KAAA,GAAAF,UAAA,CAAAG,WAAA;QACA;QACA,MAAAC,IAAA,GAAAL,MAAA,CAAAK,IAAA;QACA;QACA;MACA,GAAAC,KAAA,CAAAC,KAAA;QACA;QACA,MAAAC,SAAA,GAAAD,KAAA,CAAAE,IAAA;QACA,MAAAC,YAAA,GAAAH,KAAA,CAAAI,OAAA;QACA;QACA,MAAAC,KAAA,GAAAL,KAAA,CAAAM,UAAA,CAAAD,KAAA;QACA;QACA,MAAAX,UAAA,GAAAR,kBAAA,CAAAqB,mBAAA,CAAAP,KAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}