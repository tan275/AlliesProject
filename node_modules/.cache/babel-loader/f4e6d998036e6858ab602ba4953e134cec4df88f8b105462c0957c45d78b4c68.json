{"ast":null,"code":"import { RecaptchaVerifier } from 'firebase/auth';\nimport { signInWithPhoneNumber } from 'firebase/auth';\nexport default {\n  name: \"login\",\n  data() {\n    return {\n      phoneNumber: null,\n      confirmationResult: null,\n      otpnum: null,\n      recaptchaVerifier: null,\n      recaptchaWidgetId: null,\n      confirmResult: null,\n      smsSent: false\n    };\n  },\n  mounted() {\n    firebase.auth().useDeviceLanguage();\n    this.recaptchaVerifier = new RecaptchaVerifier('log-in', {\n      'size': 'invisible',\n      'callback': response => {\n        // reCAPTCHA solved, allow signInWithPhoneNumber.\n        console.log(response);\n      }\n    });\n  },\n  methods: {\n    submit() {\n      this.recaptchaVerifier = new RecaptchaVerifier('recaptcha-container');\n      this.recaptchaVerifier.render().then(widgetId => {\n        this.recaptchaWidgetId = widgetId;\n      });\n      var number = this.phoneNumber;\n      signInWithPhoneNumber(number, this.recaptchaVerifier).then(confirmationResult => {\n        this.confirmResult = confirmationResult;\n        console.log(this.confirmResult);\n        alert(\"Sms Sent!\");\n        this.smsSent = true;\n      }).catch(error => {\n        console.log(\"Sms not sent\", error.message);\n      });\n    },\n    verifyCode() {\n      this.confirmResult.confirm(this.otpnum).then(result => {\n        alert(\"Registeration Successfull!\", result);\n        this.gotonext();\n        var user = result.user;\n        console.log(user);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    gotonext() {\n      this.$router.replace({\n        name: \"dashboard\"\n      });\n    }\n  }\n};","map":{"version":3,"names":["RecaptchaVerifier","signInWithPhoneNumber","name","data","phoneNumber","confirmationResult","otpnum","recaptchaVerifier","recaptchaWidgetId","confirmResult","smsSent","mounted","firebase","auth","useDeviceLanguage","response","console","log","methods","submit","render","then","widgetId","number","alert","catch","error","message","verifyCode","confirm","result","gotonext","user","$router","replace"],"sources":["src/views/trial.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h1>Login</h1>\r\n        <br><br>\r\n        <form @submit.prevent=\"submit\">\r\n            <div>\r\n                <label for=\"phonenumber\" style=\"font:family:system-ui;font-size: x-large;\">Phone Number</label>\r\n            </div>\r\n            <div>\r\n                <input type=\"tel\"\r\n                    id=\"phonenumber\"                    \r\n                    maxlength=\"13\"\r\n                    required\r\n                    v-model=\"phoneNumber\"\r\n                    style=\"text-align:center;maxwidth:300px;width:300px;height:40px\"\r\n                    placeholder=\"+91 NUMBER\"\r\n                    title=\"Enter Phone number with the code\"\r\n                >\r\n            </div>\r\n            <br>\r\n            <div id=\"recaptcha-container\" style=\"background-color:#1b1a1a;width:300px;margin:auto;\">\r\n            </div>\r\n            <br>\r\n            <div>\r\n                <button class=\"btn btn-primary\" id=\"log-in\" type=\"submit\">Login</button>\r\n            </div>\r\n        </form>\r\n        <br><br>        \r\n\r\n        <br><br>\r\n        <div v-if=\"smsSent\" style=\"background-color:#1b1a1a;width:300px;height:180px;margin:auto; border-radius:10px;\">\r\n            <div style=\"background-color:black\">\r\n            <label style=\"font:family:system-ui;font-size: x-large;\">Enter Otp</label>\r\n            </div>\r\n            <br>\r\n            <div>\r\n                <input type=\"text\" \r\n                id=\"otpField\"\r\n                style=\"text-align:center;\"\r\n                pattern=\"[0-9]{6}\"\r\n                maxlength=\"6\"\r\n                v-model=\"otpnum\"\r\n                placeholder=\"Enter OTP\"\r\n                required>\r\n            </div>\r\n            <br>\r\n            <div>\r\n                <button class=\"btn btn-primary\" @click=\"verifyCode\" id=\"otp-btn\">Confirm</button>\r\n            </div>\r\n        </div>\r\n    </div>    \r\n</template>\r\n\r\n<script>\r\nimport { RecaptchaVerifier } from 'firebase/auth'\r\nimport { signInWithPhoneNumber } from 'firebase/auth'\r\n\r\nexport default {\r\n    name:\"login\",\r\n    data() {\r\n      return {\r\n        phoneNumber:null, \r\n        confirmationResult:null,\r\n        otpnum:null,\r\n        recaptchaVerifier:null,\r\n        recaptchaWidgetId:null,\r\n        confirmResult:null,\r\n        smsSent:false,\r\n      }\r\n    },\r\n    mounted()\r\n    {\r\n        firebase.auth().useDeviceLanguage()\r\n        this.recaptchaVerifier = new RecaptchaVerifier('log-in',{\r\n            'size':'invisible',\r\n            'callback':(response) => {\r\n            // reCAPTCHA solved, allow signInWithPhoneNumber.\r\n            console.log(response)\r\n            }\r\n        })            \r\n    },\r\n    methods:{\r\n        submit()\r\n        {\r\n            this.recaptchaVerifier = new RecaptchaVerifier('recaptcha-container')\r\n            this.recaptchaVerifier.render().then((widgetId)=>{\r\n            this.recaptchaWidgetId = widgetId    \r\n            })\r\n            \r\n            var number = this.phoneNumber            \r\n            signInWithPhoneNumber(number,this.recaptchaVerifier)\r\n            .then((confirmationResult)=>{                \r\n                this.confirmResult = confirmationResult\r\n                console.log(this.confirmResult)\r\n                alert(\"Sms Sent!\")\r\n                this.smsSent=true\r\n            })\r\n            .catch((error)=>{\r\n                console.log(\"Sms not sent\",error.message)\r\n            })\r\n        },\r\n        verifyCode()\r\n        {            \r\n            this.confirmResult.confirm(this.otpnum)\r\n            .then((result)=>{\r\n                alert(\"Registeration Successfull!\",result)\r\n                this.gotonext()\r\n                var user = result.user\r\n                console.log(user)                \r\n            })\r\n            .catch((error)=>{\r\n                console.log(error)\r\n            })\r\n        },\r\n        gotonext()\r\n        {\r\n            this.$router.replace({name:\"dashboard\"})\r\n        }\r\n    },    \r\n}\r\n</script>"],"mappings":"AAsDA,SAAAA,iBAAA;AACA,SAAAC,qBAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,WAAA;MACAC,kBAAA;MACAC,MAAA;MACAC,iBAAA;MACAC,iBAAA;MACAC,aAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA,EACA;IACAC,QAAA,CAAAC,IAAA,GAAAC,iBAAA;IACA,KAAAP,iBAAA,OAAAP,iBAAA;MACA;MACA,YAAAe,QAAA;QACA;QACAC,OAAA,CAAAC,GAAA,CAAAF,QAAA;MACA;IACA;EACA;EACAG,OAAA;IACAC,OAAA,EACA;MACA,KAAAZ,iBAAA,OAAAP,iBAAA;MACA,KAAAO,iBAAA,CAAAa,MAAA,GAAAC,IAAA,CAAAC,QAAA;QACA,KAAAd,iBAAA,GAAAc,QAAA;MACA;MAEA,IAAAC,MAAA,QAAAnB,WAAA;MACAH,qBAAA,CAAAsB,MAAA,OAAAhB,iBAAA,EACAc,IAAA,CAAAhB,kBAAA;QACA,KAAAI,aAAA,GAAAJ,kBAAA;QACAW,OAAA,CAAAC,GAAA,MAAAR,aAAA;QACAe,KAAA;QACA,KAAAd,OAAA;MACA,GACAe,KAAA,CAAAC,KAAA;QACAV,OAAA,CAAAC,GAAA,iBAAAS,KAAA,CAAAC,OAAA;MACA;IACA;IACAC,WAAA,EACA;MACA,KAAAnB,aAAA,CAAAoB,OAAA,MAAAvB,MAAA,EACAe,IAAA,CAAAS,MAAA;QACAN,KAAA,+BAAAM,MAAA;QACA,KAAAC,QAAA;QACA,IAAAC,IAAA,GAAAF,MAAA,CAAAE,IAAA;QACAhB,OAAA,CAAAC,GAAA,CAAAe,IAAA;MACA,GACAP,KAAA,CAAAC,KAAA;QACAV,OAAA,CAAAC,GAAA,CAAAS,KAAA;MACA;IACA;IACAK,SAAA,EACA;MACA,KAAAE,OAAA,CAAAC,OAAA;QAAAhC,IAAA;MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}